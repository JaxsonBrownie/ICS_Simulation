services:
  # Sensors + Actuators
  powermeter1:
    build: containers/powermeter1
    container_name: PowerMeter1
    privileged: true
    volumes:
      - "/dev/ttyS10:/dev/ttyS10"
    command: ["python3", "PowerMeter.py", "/dev/ttyS10"]

  transferswitch1:
    build: containers/transferswitch1
    container_name: TransferSwitch1
    privileged: true
    volumes:
      - "/dev/ttyS12:/dev/ttyS12"
    command: ["python3", "TransferSwitch.py", "/dev/ttyS12"]


  #transferswitch2:
  #  build: containers/transferswitch2
  #  container_name: TransferSwitch2
  #  command: ["python3", "TransferSwitch.py"]
  #  networks:
  #    vlan1:
  #      ipv4_address: 192.168.0.34

  #powermeter2:
  #  build: containers/powermeter2
  #  container_name: PowerMeter2
  #  command: ["python3", "PowerMeter.py"]
  #  networks:
  #    vlan1:
  #      ipv4_address: 192.168.0.33

  # PLCs
  plc1:
    build: containers/plc1
    container_name: PLC1
    privileged: true
    volumes:
      - "/dev/ttyS11:/dev/ttyS11"
      - "/dev/ttyS13:/dev/ttyS13"
    command: ["python3", "PLC.py", "/dev/ttyS11", "/dev/ttyS13"]
    networks:
      vlan1:
        ipv4_address: 192.168.0.21
        
  #plc2:
  #  build: containers/plc2
  #  container_name: PLC2
  #  command: ["python3", "PLC.py", "192.168.0.33", "192.168.0.34"]
  #  networks:
  #    vlan1:
  #      ipv4_address: 192.168.0.22

  # HMIs
  #hmi1:
  #  build: containers/hmi1
  #  container_name: HMI1
  #  command: ["python3", "HMI1.py", "192.168.0.21", "192.168.0.22"]
  #  networks:
  #    vlan1:
  #      ipv4_address: 192.168.0.11

# Modbus TCP network
networks:
  vlan1:
    driver: bridge
    name: ics_sim_net
    ipam:
     config:
       - subnet: 192.168.0.0/24
         gateway: 192.168.0.1
    driver_opts:
      com.docker.network.bridge.name: br_ics_sim_net